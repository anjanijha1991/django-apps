{"ast":null,"code":"import _classCallCheck from \"/home/kp/Desktop/Practice/djangoPractice/django-apps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kp/Desktop/Practice/djangoPractice/django-apps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kp/Desktop/Practice/djangoPractice/django-apps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kp/Desktop/Practice/djangoPractice/django-apps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kp/Desktop/Practice/djangoPractice/django-apps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/kp/Desktop/Practice/djangoPractice/django-apps/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/kp/Desktop/Practice/djangoPractice/django-apps/src/components/Login.js\";\nimport React, { Component } from 'react';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      username: '',\n      password: '',\n      fields: {},\n      errors: {}\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleValidation = _this.handleValidation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true; //Email\n\n      if (!fields[\"email\"]) {\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      }\n\n      if (typeof fields[\"email\"] !== \"undefined\") {\n        var lastAtPos = fields[\"email\"].lastIndexOf('@');\n        var lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Email is not valid\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      alert(\"Login successfull!! Welcome \");\n      event.preventDefault();\n\n      if (this.handleValidation()) {\n        alert(\"Form submitted\");\n      } else {\n        alert(\"Form has errors.\");\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(field, event) {\n      var fields = this.state.fields;\n      fields[field] = event.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Email\", React.createElement(\"input\", {\n        type: \"email\",\n        onChange: this.handleChange.bind(this, \"email\"),\n        id: \"email\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Password\", React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        onChange: this.handleChange.bind(this, \"password\"),\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: \"Send Message\",\n        className: \"button alt\",\n        onClick: function onClick(event) {\n          return _this2.handleClick(event);\n        },\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/home/kp/Desktop/Practice/djangoPractice/django-apps/src/components/Login.js"],"names":["React","Component","Login","props","state","username","password","fields","errors","handleClick","bind","handleChange","handleValidation","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","event","alert","preventDefault","field","target","value"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            fields: {},\n            errors: {}\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleValidation = this.handleValidation.bind(this);\n    }\n    handleValidation() {\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n        //Email\n        if (!fields[\"email\"]) {\n            formIsValid = false;\n            errors[\"email\"] = \"Cannot be empty\";\n        }\n\n        if (typeof fields[\"email\"] !== \"undefined\") {\n            let lastAtPos = fields[\"email\"].lastIndexOf('@');\n            let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n                formIsValid = false;\n                errors[\"email\"] = \"Email is not valid\";\n            }\n        }\n\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n\n\n\n\n    handleClick(event) {\n        alert(\"Login successfull!! Welcome \");\n        event.preventDefault();\n        if (this.handleValidation()) {\n            alert(\"Form submitted\");\n        } else {\n            alert(\"Form has errors.\")\n        }\n    }\n    handleChange(field, event) {\n        let fields = this.state.fields;\n        fields[field] = event.target.value;\n        this.setState({ fields });\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleClick.bind(this)}>\n                <div id=\"login\">\n                    <div className=\"field\">\n                        <label for=\"email\">Email\n                            <input type=\"email\" onChange={this.handleChange.bind(this, \"email\")} id=\"email\" placeholder=\"Email\" />\n                        </label>\n                    </div>\n                    <div className=\"field\">\n                        <label for=\"password\">Password\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange.bind(this, \"password\")} placeholder=\"Password\" />\n                        </label>\n                    </div>\n                    <div className=\"field\">\n                        <input value=\"Send Message\" className=\"button alt\" onClick={(event) => this.handleClick(event)} type=\"submit\" />\n                    </div>\n                </div>\n            </form>\n\n        );\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}